name: Build Catalyst Wheel on Linux (x86_64)

on:
  workflow_dispatch:
  workflow_call:

concurrency:
  group: Build Catalyst Wheel on Linux (x86_64)-${{ github.ref }}
  cancel-in-progress: true

jobs:
  determine_runner:
    name: Determine runner type to use
    uses: ./.github/workflows/determine-workflow-runner.yml
    with:
      default_runner: ubuntu-latest

  check_if_wheel_build_required:
    uses: ./.github/workflows/check-for-wheel-build.yml

  constants:
    needs: [check_if_wheel_build_required, determine_runner]
    if: needs.check_if_wheel_build_required.outputs.build-wheels == 'true'
    name: "Set build matrix"
    uses: ./.github/workflows/constants.yaml
    with:
      runs_on: ${{ needs.determine_runner.outputs.runner_group }}

  build-dependencies:
    needs: [constants, check_if_wheel_build_required, determine_runner]

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        arch: [x86_64]
        python_version: [3.9]
        container_img: ["quay.io/pypa/manylinux_2_28_x86_64"]

    name: Build Dependencies (Python ${{ matrix.python_version }})
    runs-on: ${{ needs.determine_runner.outputs.runner_group }}
    container: ${{ matrix.container_img }}

    if: needs.check_if_wheel_build_required.outputs.build-wheels == 'true'

    steps:
    # TODO: Cannot use actions/checkout@v4 as node20 is not supported in manylinux2014 container
    - name: Checkout Catalyst repo
      uses: actions/checkout@v3

  catalyst-linux-wheels-x86-64:
    needs: [constants, build-dependencies, determine_runner]
    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJSON(format('["{0}"]', needs.determine_runner.outputs.runner_group)) }}
        arch: [x86_64]
        python_version: ${{ fromJSON(needs.constants.outputs.python_versions) }}
        container_img: ["quay.io/pypa/manylinux_2_28_x86_64"]

    name: Build Wheels (Python ${{ matrix.python_version }})
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container_img }}

    steps:
    - name: Repair wheel using auditwheel
      run: |
        mkdir wheel
        touch wheel/PennyLane_Catalyst-0.8.0.dev0-cp${{ matrix.python_version }}-cp${{ matrix.python_version }}-linux_x86_64.whl
        echo "hello" >> wheel/PennyLane_Catalyst-0.8.0.dev0-cp${{ matrix.python_version }}-cp${{ matrix.python_version }}-linux_x86_64.whl

    - name: Upload Wheel Artifact
      uses: actions/upload-artifact@v4
      with:
        name: catalyst-manylinux_2_28_x86_64-wheel-py-${{ matrix.python_version }}.zip
        path: wheel/
        retention-days: 14
